<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Afz/wAH8//AD/A==
</value>
  </data>
</root>