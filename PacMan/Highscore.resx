<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2/8F+f//APX//wDx//8A7v//AOn//wDl//8A4f//AN7//wDZ//8A1f//ANH//wDN//8Ayf//AMX//wDB
        //8Avv3/AKzk/wBZeP4ASmH9AGyO/wCFmPkAg5HzAF9y6gAIDWsAAAAbAAAAJAAAAC4AAABSI4eV7Qnu
        /v8A6/z/BPL+/wH3//8A9v//APL//wDu//8A6v//AOb//wDh//8A3v//ANr//wDV//8A0f//AM7//wDK
        //8Axf//AMH//wC9/f8Aufb/AK3n/wCq4v8AiLX/ABAVvAAAAHAAAAAxAAAACgAAAAAAAAAAAAAAAAAA
        ACoriJbsJvL7/x7y/P8W9P//Aff//wD2//8A8v//AO///wDr//8A5v//AOL//wDe//8A2v//ANb//wDS
        //8Azv//AMv//wDG//8Awv//AL7+/wC8+P8Av/T/AL/y/wCYwf8AFh6rAAAARgAAAAUAAAAAAAAAAAAA
        AAAAAAAAAAAAHRk6SLYrYXPSKltw3zWzzv4E+f//APb//wDy//8A7///AOv//wDm//8A4///AN7//wDa
        //8A1v//ANL//wDO//8Ay///AMb//wDC//8Av///AKzk/wBedvQAWGnhAExe0gAPF2IAAAAOAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAADwAAABYCAABXKZWx+AP6//8A9///APP//wDw//8A7P//AOf//wDj
        //8A4P//ANv//wDW//8A0///AM7//wDL//8Ax///AMP//wDA//8Aodb/ABojxwAAAGkAAAAjAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDDUczka35K+33/yfr9/8m6Pf/JOX3/yLi
        9/8h3/f/INv3/x3Z9/8c1/f/GNP3/xXS9/8Szvf/D833/wzK9/8IyPf/BMf3/wGo1f8AIS6+AAAATQAA
        AAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHLB49UccvXnHYLl1w2C1d
        ctgrXXLYKFxy2CZcctglW3LYIlpy2CFactgdWnLYGFpy2BVbctgRW3LYDFty2AhbcdgFXHDYAU9j1gAU
        H3kAAAAOAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA//8AAP//AAD//wAA//8AAP//AAP//+AH///g
        B///4Af/+AAAH/gAAB/4AAAHwAAAA8AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAA8AA
        AAPAAAAP+AAAH/gAAB8=
</value>
  </data>
</root>