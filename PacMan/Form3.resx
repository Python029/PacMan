<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAWFhX/GBkY/x4eGf8kJBr/JSUc/yspIP8sKiL/JiQc/yUjGv8oJh7/LSkh/y0sIv9JKhj/fEEv/4tx
        Xf+BeWj/em9n/3NrZP9xcGb/X19Y/2RhWP9ZWlT/SlJP/zZCRf8YISL/ExkY/yUoJP8qKiL/Kigh/yUj
        HP8kIx7/JCUj/xgVEf8YGBP/GxsW/yAfGP8lIx3/KCYf/yclH/8hHxn/JCIc/yMhG/8kIRr/Kycd/04p
        Hf92Sj//Y1tQ/19dU/9iXVf/YlpV/2diW/9mZWL/bGZg/3BWSv9VSED/ODo4/ygoJ/8oKSb/IyUh/yEj
        Hv8jJCH/IyMh/yIlIP8iJx//Gh8c/xcXFf8aFhP/HBoT/x4cFv8hHxn/JCIc/yQiHP8jIRv/IyEb/yAd
        Fv8kHxT/Tiwh/2FJP/9YVU3/XFdS/1pUUP9gWE7/WlRO/1tZVv9aV1P/dFlN/1s7L/8nIx7/KSYi/yUk
        H/8hIx3/IiMe/yIjIP8hIiH/ISMg/x4hHf8tQUD/KDU0/yAlIv8cGxb/HBoW/x0dFv8gIBn/JCMd/yIg
        Gf8hIBn/HhsW/yEaEf9MLyP/UUpD/1tbV/9TTUr/SkU//1JLPv9ZUkv/VFFO/1JSUf9cT0X/XUM1/y4p
        Iv8hIRv/IiEc/yEiH/8iIh//HyAe/x4fHf8aHBr/FRgW/zBBRP8uQkD/KTw5/yMxL/8eKCb/GyEb/xgf
        F/8ZHhb/ICAZ/yAhGv8bGBf/HxcS/0wzKv9ZVVL/REVG/zQzMv85NTL/Mism/zErJv9BPjv/U1RT/1ZO
        S/9XPDX/MCgh/xweG/8hIB//HiAe/xkaGf8UGBb/FhsZ/x4jIf8vNjT/MUJE/y5AP/8qPDn/Kjg2/yo1
        M/8pMS7/Iywo/x0kIP8ZHBn/FBgV/xkWFP8gFRP/SDk5/0VDQv8pLC3/S01Y/3Bsd/9zbnT/UVJU/ysq
        KP9DPz3/VVBU/1E8Nv8vJx//GxwY/xobGf8WHBr/HyQi/yoxL/84QD7/RE5L/0ZSTv8xQkX/LkE//yg9
        Of8lOTX/JTQx/ycyMP8mMC//JzIw/yUuLP8pMjH/ISYk/xsXFv80MzT/LzU0/09UWf9tb33/bW57/3V2
        gv9xdn7/T1FS/ykpJ/9FRkz/UT89/ykgHf8XHRv/KTAu/zRAPf8/S0j/Q09M/0JPS/8/TUn/PU5K/zFC
        Rf8vQUD/KD46/yU7N/8mNzT/JjQy/yQyMP8lMzD/JTQx/zVEQf85RUX/ICIk/ygsLf87QUH/V1tj/2Ji
        bv9gX2j/Zmdw/3R5g/9laGr/PEA9/zU2PP9DOTj/LCon/zZGQ/8/TUr/P01J/z9NSf8+TUn/QE1J/0BP
        S/8/UU3/MUJE/zBCQf8qPjz/JTo4/yY3Nf8lNzT/JDYz/yU3Nf8jNTP/MUNA/y47Pf8rLzT/Q0dK/y0v
        Mf8jJCj/SUVQ/3Rte/9mYXD/YmVv/2dqbP9MT0z/Pz1D/zk5Nv87RED/N01J/zhKR/88S0f/PUtI/z9N
        Sf9ATUn/QE9L/z5PS/8yQ0b/MEBD/ys9Pv8nOTr/Jzk5/yU4OP8jNzX/IzY3/yM0OP82RET/IS0v/y0z
        N/8xMzX/Ojo9/zc4Pf9nYmb/g3t+/4B5fP9FQkf/Kisv/01PU/9MUFP/NkE//zxNSf84SUb/OUpH/zpL
        SP87TEn/P01J/z9NSf9ATUr/QU5L/zFCRP8vQEL/LD0//yk7O/8oOjr/JTo8/yM5PP8jODv/Jzc8/ygz
        O/8uNz//PkNK/19fZ/9XVl7/Kikt/1xYYf9xbHX/W1lc/ygoJ/8lJyj/UlVa/1RaYP82QkP/OktI/zpL
        SP86S0j/OktI/ztMSf89TEj/P0xI/0BOSv9BT0v/MUFF/y8/Q/8sPUH/KDs+/yg7Pv8lOj//Izk+/yY6
        Pv8kNjz/ISk3/zlBTP9OVGH/ZmZz/zY1Ov9OT1n/Wlhg/2Niaf9YWWb/LSwy/0xOUv86PET/SE5Z/zNC
        R/82R0X/OkpI/zpLSP86S0j/OktI/z5MSf8/TUn/QE5K/0JQTP8vQUf/LkBF/yw/RP8oPEH/Kj1D/yc6
        P/8lOT7/JztB/x4uN/9DSVX/PkVS/1BUav9oZ3v/eHiD/1NZZP9fYnD/Zml3/1JXZ/9YWWP/V1hk/2Vt
        fv9CS1v/N0RQ/z5MUv84SEf/O0xI/zpLSP85Skf/Pk1J/0BOSv8/TUn/QE5K/y1DSP8sQkf/Kj9E/yo9
        Qv8pPEH/Jjo//yY6P/8iNT3/MDdF/0lLU/9IUVr/W2By/2Jjdf9wdIT/UFZl/1Rfdf9ga4D/WWBw/2xw
        e/9zdYn/XGl//0JRY/9BSlv/UVxr/zdIRf86S0n/OktI/zlLR/89TEj/P0xJ/z9NSf8/TUn/LkNI/y1C
        R/8rP0T/Kz5D/yg8Qf8nO0D/Jzs//yIyO/8wMz7/LjM5/0tbXf9VXmT/Y2Nw/19gcf9JUWP/VmJ2/1dn
        e/9han7/bnSG/2luh/9jbYP/Slhq/0ZMXf9WXGj/OEdF/zhKR/86S0j/OktI/zpLSP87TEn/PExJ/z9N
        Sf8uQkf/LEFG/ys/RP8rP0T/Kj1C/yg7QP8oPED/ITI3/xoeIv8qLzX/RVFW/z5FSf88Oj3/WVdc/0lR
        X/9YZHj/WGJ0/1taaP9mZnT/aXOF/2h3hf9TYHL/RUxZ/2Vqdv86SEr/N0hI/zpLSP85Skf/OUpH/zpM
        Sf88TEn/P0xI/ytCRv8qQUb/Kj9E/yo/RP8oPkP/JjxB/yc7Qf8eLjT/EhgY/ygvNP88RU3/Wl5f/1NU
        Tv9BRT//UFBa/2hvfv9OVV3/WVFS/09HTP9GSVT/V2Rs/1FgcP8tNED/TU9e/0NQVf80RkX/OkpH/zhI
        Rv86S0j/OktI/ztLSP89TEj/KUNH/yhCRv8nQEX/JD1D/yQ9Qv8kPkH/JjtC/xonMf8XHR//Iiwz/0VO
        Wf9dYmX/YWVi/2ZpaP9zc3n/d3uC/1peX/9PTEj/TkxM/0tPVv9OVl//SFdi/yQqNf9BQ07/Pk1Q/zNF
        Qv87RkX/OkdF/zlJRv85Skf/OktI/zlKR/8oQkb/KEJF/yZARP8kPUL/JT5D/yM9QP8kOUD/FSIs/xcd
        H/8qNDn/SVRk/2hvef95fIH/g4KJ/4aFjf+HiIr/gYSF/2VnaP9mZ2v/Y2lz/05Yaf86RVH/Fh8l/yo2
        OP83REX/N0RE/zlGRP85RkT/N0dF/zlKR/86S0j/OktI/ydBRf8nQUX/Jj9E/yQ+Q/8kPUL/ID09/x83
        Pf8ZICj/HB0e/zU/Sv9IVmj/WWV0/2lzfv9ye4f/en6L/3uCif+BiY//f4WP/3V8hv9hbXz/SFZr/ycu
        N/8jJif/Kjo4/zVFQ/80Q0H/N0RC/zdEQv82RUX/N0dH/zlJSP87SUn/J0FF/ydBRf8kPUL/IjxB/yE7
        QP8hPD//HDI3/xwhJP8qKiv/Mz9L/0VVZv9aaHf/aHSA/2x4hf93fov/eH6N/3B6i/9seYz/bXyN/1xr
        fP9DT1//KCww/yUrKf8xQT//MUNA/zJCP/82Q0H/N0RC/zVERP8zQ0T/OEdI/zpGR/8nQUb/J0FF/yM9
        Qv8hO0D/ITtA/yQ6Qv8XKi//HiIh/yMjJf8sN0P/Q1Jj/1lndv9qdoP/cHyI/3l/jP95fY7/cHuO/2J1
        iv9ecYj/UGF0/z1FUf8mKiv/HSon/y4/Pf8wQT//MkFA/zZDQf83REL/NERE/zRFRf83RUb/OERE/ydB
        Rv8kPkP/IzxC/yI8Qf8gOT7/IjtA/xkuNP8UHBz/Ghwe/yMsN/9GUl//V2Jv/2Rwff9seIX/c32O/3N+
        kf9seo//ZnaO/1pshv9IWXH/LDJA/x4lK/8hMC7/Lj4+/zFBQv8yQkH/MUI//zJDQf8zQ0P/M0NE/zVE
        RP83REL/JT9E/yM9Qv8iO0D/IjtA/yA5Pv8gO0T/FC02/zY7Rf8wMjj/AwsN/ykxOf9IUVv/U1pj/1xh
        bf9nc4H/aXeN/2R1j/9leJX/UGaF/0RTa/8eIyr/Hicq/yUyNf8wQED/MUFB/zFCQf8xQj//MUI//zJC
        Qv8yQkL/NEJC/zdDQf8lPkb/IzxE/yE6Qf8gOUH/IDlA/yA6RP8SLDj/lZGg/21ud/8AAgD/Bw0P/xMb
        Hv8hJiv/MzQ6/1FXXf9YZXD/WGh8/1Nlf/9BVm//ND9M/ycqMv8PGRz/KDU5/zJBQv8wP0D/MD8//zFB
        QP8xQUD/MEJA/zBCQP8wQUD/MUFA/yQ9Rv8iO0T/IDlB/yA5Qv8hOkP/GzZA/zE+TP+6zdP/mrbM/yMk
        Lf8EDQv/ChAR/wkPFP8MExf/HSEm/yQvL/8lNTb/IzQ7/xAhJP9ISlb/i4WM/xciJf8sPT//L0BB/yw9
        Pf8uPz//MEBA/y8/P/8vQT//L0I//y9CQP8vQUH/IjtE/yI7RP8gOUL/IDlC/yE5Qv8TLjn/VVtm/8XI
        zP/Av8L/l4qL/xcgJf8SGhn/Fhsf/wwSFf8MERX/CRAX/wIKEv8AAQX/Jisz/5B+iv+fqaH/Rlle/yg8
        Pf8tQ0P/KD8//yo9Pf8uPT3/Lz8//yw/PP8tQD3/LkE//y9BQf8gOEP/IDhD/yA4Q/8fOEL/IThD/xAq
        Nv9obXT/t7G2/9m4kP/w8rL/tLix/zI5QP8XIB//Fh8e/xEYG/8MFxz/FiEm/0tRXP+LiZT/mJmc/5Kc
        mv9gfoP/JTU7/zBCR/8vQUL/LT4+/ys6Pf8uPD7/Kz07/yo9Ov8tPz3/LT9A/x83Qv8gOEP/HzdC/x83
        Qv8fNkH/Eis3/1VjbP+3t7v/wbi1/8O3p/97goX/N0ZQ/yE1Nv8lNzf/IjI3/xgrMP9jYXP/r7bB/4Gc
        lf+PgIj/nouN/1x2h/8lNzz/Lj9E/y0/QP8rPj3/KDs9/yk8Pf8pPDz/KTs7/yo8PP8qPDz/IDhD/yA4
        Q/8eNUH/HTRA/xwyP/8bMj3/ITdD/1Bec/9GVWr/IDRC/xgtMv8jNzn/Jjs+/yQ6Pf8lOkD/JjpA/yw+
        Rf9scH3/gYSU/4WIkv+eh5D/XmJz/yI3O/8uP0T/Kz1A/yk+Pv8nPT7/JDo7/yc5PP8oOTz/KDk7/yg6
        Ov8fN0L/HjVA/xwzP/8cM0H/HDJA/xsyPv8aMjz/Eio0/xMrNP8aMzj/Ijc5/yE1N/8hNTf/IjY7/yM3
        PP8kNzz/Izc8/x0zN/8nOUD/OUpV/0BMWv8tO0P/JTc8/yg7QP8oPEH/KDxA/yk9P/8mOz3/KDo8/yc4
        Ov8nODr/KTo9/xw0P/8cMz7/GzE+/xsxP/8ZMD7/GTE8/xoxPP8cMz//GzE9/xw0Ov8gNDr/IDM5/yAz
        Of8hNDn/IDQ5/yA0Of8iNTv/Jjk+/yI3O/8fMzf/HjQ3/yE3PP8kOT//Jjo//yY5Pv8mOT7/Jjk//yY5
        P/8nOTz/JTY4/yQ1N/8kNjf/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>